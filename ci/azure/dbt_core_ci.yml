trigger:
  branches:
    include:
      - main
      - ci

pr:
  branches:
    include:
      - main
      - ci

jobs:
- job: ci_run
  displayName: 'CI Run'
  pool:
    vmImage: 'ubuntu-latest'

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
        addToPath: true

    - script: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install dbt-snowflake
      displayName: 'Install dependencies'

    - script: |
        mkdir -p $(DBT_PROFILES_DIR)
        cat <<EOF > $(DBT_PROFILES_DIR)/profiles.yml
        dbt_flake:
          target: dev
          outputs:
            dev:
              type: snowflake
              account: $(SNOWFLAKE_ACCOUNT)
              user: $(SNOWFLAKE_USER)
              password: $(SNOWFLAKE_PASSWORD)
              role: $(SNOWFLAKE_ROLE)
              warehouse: $(SNOWFLAKE_WAREHOUSE)
              database: $(SNOWFLAKE_DATABASE)
              schema: $(SNOWFLAKE_SCHEMA)
              threads: 4
              client_session_keep_alive: false
        EOF
      displayName: 'Setup dbt profile'

    - script: |
        source venv/bin/activate
        dbt run-operation ci_clone_db
      condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/ci'), and(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/ci'))))
      displayName: 'Clone CI database'

    - script: |
        source venv/bin/activate
        dbt deps
        dbt seed
        dbt run
        dbt test
      condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/ci'), and(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/ci'))))
      displayName: 'Run dbt Commands'

    - script: |
        source venv/bin/activate
        dbt run-operation grant_view_access
      condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/ci'), and(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/ci'))))
      displayName: 'Grant CI database access'

    - script: |
        source venv/bin/activate
        dbt run-operation ci_drop_db
      condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), and(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/main'))))
      displayName: 'Drop CI databases'

- job: pre_commit_check
  displayName: 'Pre-Commit Check'
  pool:
    vmImage: 'ubuntu-latest'

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
        addToPath: true

    - script: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install pre-commit
        pre-commit install
        pip install dbt-snowflake
      displayName: 'Install pre-commit dependencies'

    - script: |
        mkdir -p $(DBT_PROFILES_DIR)
        cat <<EOF > $(DBT_PROFILES_DIR)/profiles.yml
        dbt_flake:
          target: dev
          outputs:
            dev:
              type: snowflake
              account: $(SNOWFLAKE_ACCOUNT)
              user: $(SNOWFLAKE_USER)
              password: $(SNOWFLAKE_PASSWORD)
              role: $(SNOWFLAKE_ROLE)
              warehouse: $(SNOWFLAKE_WAREHOUSE)
              database: $(SNOWFLAKE_DATABASE)
              schema: $(SNOWFLAKE_SCHEMA)
              threads: 4
              client_session_keep_alive: false
        EOF
      displayName: 'Setup dbt profile'

    - script: |
        source venv/bin/activate
        pre-commit run --all-files
      displayName: 'Run pre-commit hooks'