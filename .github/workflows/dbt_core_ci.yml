name: dbt CI Pipeline

on:
  # uncomment, if required
  # push:
  #   branches:
  #     - main
  #     - dev
  
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - ci

jobs:
  ci_run:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install dbt-snowflake

      # Create a PR from CI to Main after a push to ci branch
      - name: Create PR from CI to Main
        if: github.ref == 'refs/heads/ci'  # Ensures this runs only when changes are pushed to the ci branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout ci
          git pull origin ci
          git checkout -b auto-pr-ci-to-main
          git push origin auto-pr-ci-to-main
          gh pr create --base main --head auto-pr-ci-to-main --title "Automated PR: Merge CI changes to main" --body "This is an automated PR to merge changes from ci to main after the PR from dev to ci was merged."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Set up dbt profile
      - name: set up dbt profile
        run: |
          mkdir -p ~/.dbt
          echo "${{ secrets.DBT_CREDENTIALS }}" > ~/.dbt/profiles.yml

      # Clone CI database (optional)
      - name: clone CI database
        if: (github.ref == 'refs/heads/ci') || (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'ci')
        run: |
          source venv/bin/activate
          dbt run-operation ci_clone_db
      
      # Run dbt commands
      - name: Run dbt Commands
        if: (github.ref == 'refs/heads/ci') || (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'ci')
        run: |
          source venv/bin/activate
          dbt deps
          dbt seed
          dbt run
          dbt test
      
      # Grant CI database access
      - name: Grant CI database access
        if: (github.ref == 'refs/heads/ci') || (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'ci')
        run: |
          source venv/bin/activate
          dbt run-operation grant_view_access
      
      # Drop CI databases
      - name: Drop CI databases
        if: (github.ref == 'refs/heads/main') || (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main')
        run: |
          source venv/bin/activate
          dbt run-operation ci_drop_db

      

  pre_commit_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install pre-commit dependencies
      - name: Install pre-commit dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install pre-commit
          pre-commit install
          pip install dbt-snowflake
      
      # Set up dbt profile
      - name: set up dbt profile
        run: |
          mkdir -p ~/.dbt
          echo "${{ secrets.DBT_CREDENTIALS }}" > ~/.dbt/profiles.yml

      # Run pre-commit hooks
      - name: Run pre-commit hooks
        run: |
          source venv/bin/activate
          pre-commit run --all-files
