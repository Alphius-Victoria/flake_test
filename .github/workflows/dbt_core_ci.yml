name: dbt CI/CD Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - ci  # Trigger when a PR targets the ci branch

jobs:
  # Main CI job
  ci_run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install dbt-snowflake

      - name: Set up dbt profile
        run: |
          mkdir -p ~/.dbt
          echo "${{ secrets.DBT_CREDENTIALS }}" > ~/.dbt/profiles.yml

      - name: Run dbt Commands
        if: github.event.pull_request.base.ref == 'ci'
        run: |
          source venv/bin/activate
          dbt deps
          dbt seed
          dbt run
          dbt test

      - name: Grant CI database access
        if: github.event.pull_request.base.ref == 'ci'
        run: |
          source venv/bin/activate
          dbt run-operation grant_view_access

      - name: Drop CI databases
        if: github.event.pull_request.base.ref == 'main'
        run: |
          source venv/bin/activate
          dbt run-operation ci_drop_db

  # Pre-commit check job
  pre_commit_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pre-commit dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install pre-commit
          pre-commit install
          pip install dbt-snowflake

      - name: Set up dbt profile
        run: |
          mkdir -p ~/.dbt
          echo "${{ secrets.DBT_CREDENTIALS }}" > ~/.dbt/profiles.yml

      - name: Run pre-commit hooks
        run: |
          source venv/bin/activate
          pre-commit run --all-files

  # Auto-merge job
  auto_merge_to_main:
    needs: [ci_run, pre_commit_check]
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.base.ref == 'ci' &&
      github.event.pull_request.head.ref == 'dev' &&
      github.event.pull_request.mergeable == true &&
      success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Merge ci into main
        run: |
          git fetch origin
          git checkout main
          git merge --no-ff ci
          git push origin main
